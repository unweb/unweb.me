// this code was autogenerated from PJS
var sl2 = function($p) {
  var graphLine = (function() {
  function graphLine() {
  var $this_1 = this;
  function $superCstr(){$p.extendClassChain($this_1)}
  $this_1.localPoints = null;
  $this_1.curX = 0;
  $this_1.curY = 0;
  $this_1.uX = 0;
  $this_1.uY = 0;
  $this_1.opacity = 0;
  function init$0() {
  var ipos =  $p.random($p.width + Ht);
      if (ipos < Ht) {
  $this_1.curX = 0;
        $this_1.curY = $p.height * 0.2 + ipos;
        $p.print("GG");
  } else {
  $this_1.curX = ipos - Ht;
        $this_1.curY = 0.8 * $p.height;
  }
      $this_1.uX = 2 + $p.random(3);
      $this_1.uY = 0;
      $this_1.uY -= 2;
      $this_1.uY = $p.min(0, $p.max(-2, $this_1.uY));
      $this_1.localPoints = new $p.ArrayList();
      $this_1.localPoints.add(new $p.PVector($this_1.curX, $this_1.curY));
      $this_1.opacity = 250;
  }
  $p.addMethod($this_1, 'init', init$0);
  function step$0() {
  if ($this_1.curX > $p.width || $this_1.curY > $p.height * 0.8 || $this_1.curY < $p.height * 0.2) {
  $this_1.opacity-=5;
        if ($this_1.opacity<5) $this_1.$self.init();
  } else {
  $this_1.curX += $this_1.uX;
        $this_1.curY += $this_1.uY;
  
               if ($this_1.localPoints.size()<20 && $p.random(1)<0.15) {
  $this_1.uY -= ($p.__int_cast($p.random(4)) - 1)*($this_1.curX * 0.01 + 1);
          $this_1.uY = $p.min(2, $p.max(-2, $this_1.uY));
          $this_1.localPoints.add(new $p.PVector($this_1.curX,$this_1.curY,0));
  }
  }
  }
  $p.addMethod($this_1, 'step', step$0);
  function draw$0() {
  $p.stroke(255, $this_1.opacity);
      $p.beginShape();
      for (var $it0 = new $p.ObjectIterator( $this_1.localPoints), p  = void(0); $it0.hasNext() && ((p  = $it0.next()) || true);) {
  $p.vertex(p.x,p.y);
  }
      $p.vertex($this_1.curX, $this_1.curY);
      $p.endShape();
  }
  $p.addMethod($this_1, 'draw', draw$0);
  function $constr_0(){
  $superCstr();
  
  $this_1.$self.init();
  }
  
  function $constr() {
  if(arguments.length === 0) { $constr_0.apply($this_1, arguments); } else $superCstr();
  }
  $constr.apply(null, arguments);
  }
  return graphLine;
  })();
  $p.graphLine = graphLine;
  
  var points =  new $p.ArrayList();
  
  var Ht = 0;
  
  function setup() {
  $p.size(320, 320, $p.P2D);
    $p.background(0,0);
    $p.frameRate(16);
    Ht = $p.height * 0.6;
    $p.noLoop();
  }
  $p.setup = setup;
  
  function draw() {
  $p.background(0,0);
    $p.strokeWeight(1);
    $p.noFill();
    $p.stroke(255,30);
          for (var i = 0;  i<points.size(); i++) {
  var l =  points.get(i);
      l.draw();
      l.step();
  }
    if (points.size() < 10) {
  points.add(new graphLine());
  }
  }
  $p.draw = draw;

}